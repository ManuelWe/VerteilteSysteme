/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
     jcenter()
}

//create a single Jar with all dependencies
task fatJarServer(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File for webserver',  
        	'Implementation-Version': '1.0.1',
        	'Main-Class': 'eu.boxwork.dhbw.examples.webservice.Webserver'
    }
    baseName = 'example_restwebserver'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//create a single Jar with all dependencies
task fatJarClient(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File for REST web client',  
        	'Implementation-Version': '1.0.0',
        	'Main-Class': 'eu.boxwork.dhbw.examples.webservice.ClientApp'
    }
    baseName = 'example_restwebclient'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    
 	// https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl
	compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'

	// https://mvnrepository.com/artifact/com.sun.jersey/jersey-bundle
	compile group: 'com.sun.jersey', name: 'jersey-bundle', version: '1.19.4'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

